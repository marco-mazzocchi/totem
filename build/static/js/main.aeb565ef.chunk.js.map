{"version":3,"sources":["NavBar/NavBar.jsx","AnimalList/AnimalList.jsx","SearchPage/SearchPage.jsx","AllAnimalsPage/AllAnimalsPage.jsx","AppFab/AppFab.jsx","CategoryPage/CategoryPage.jsx","TagPage/TagPage.jsx","AnimalDetails/AnimalDetails.jsx","App.js","serviceWorker.js","index.js","AppContext.jsx","AppDrawer/DrawerContext.jsx","AppDrawer/AppDrawer.jsx"],"names":["NavBar","drawerContext","useContext","DrawerContext","AppBar","position","color","Toolbar","IconButton","onClick","setShowDrawer","showDrawer","edge","aria-label","Typography","variant","AnimalList","animals","history","useHistory","classes","makeStyles","theme","card","maxWidth","marginBottom","marginTop","media","height","chip","margin","spacing","detailsButton","marginLeft","categoryChip","top","right","useStyles","animalsRender","map","animal","tags","tag","Chip","key","id","className","e","preventDefault","stopPropagation","push","label","name","size","clickable","Card","CardActionArea","component","href","CardMedia","image","picture","title","category","CardContent","gutterBottom","short_description","CardActions","Button","length","Grid","container","direction","justify","alignItems","SearchPage","appContext","AppContext","useState","setTags","categories","setCategories","filteredAnimals","setFilteredAnimals","searchFilter","setSearchFilter","animalName","setAnimalName","setCategory","showForm","setShowForm","useEffect","ReactGA","pageview","Object","keys","axios","get","params","then","response","status","data","results","selected","toggleTagSelection","index","newTagList","tagList","maxHeight","overflowY","overflowX","transition","centered","textAlign","tagChips","bind","noValidate","autoComplete","onSubmit","selectedFilters","selectedTags","filter","reduce","acc","join","TextField","fullWidth","value","placeholder","onChange","target","select","option","MenuItem","type","startIcon","CategoryPage","setAnimals","AppFab","fab","bottom","zIndex","Fab","useParams","find","parseInt","AnimalDetails","setAnimal","marginRight","shortDescription","alt","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","physical_description","behavior_description","habitat_description","LinearProgress","defaults","xsrfHeaderName","xsrfCookieName","process","hasOwnProperty","initialize","createMuiTheme","palette","primary","main","secondary","background","paper","default","text","App","ThemeProvider","Provider","Box","bgcolor","style","minHeight","py","basename","AppDrawer","Container","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","createContext","iOS","browser","test","userAgent","list","width","fullList","toggleDrawer","open","event","ListItemLink","props","button","Items","role","onKeyDown","subheader","onClose","onOpen","disableBackdropTransition","disableDiscovery"],"mappings":"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","file":"static/js/main.aeb565ef.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport DrawerContext from '../AppDrawer/DrawerContext';\n\nfunction NavBar() {\n    const drawerContext = useContext(DrawerContext);\n    const onDrawerButton = () => {\n        drawerContext.setShowDrawer(!drawerContext.showDrawer);\n    };\n    return (\n        <AppBar position=\"fixed\" color=\"inherit\">\n            <Toolbar>\n                <IconButton onClick={onDrawerButton} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\">\n                    Totem\n            </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport IconButton from '@material-ui/core/IconButton';\nimport BookmarkBorder from '@material-ui/icons/BookmarkBorder';\n\nfunction AnimalList({ animals }) {\n   const history = useHistory();\n\n   const useStyles = makeStyles(theme => ({\n      card: {\n         maxWidth: 345,\n         marginBottom: 20,\n         marginTop: 20\n      },\n      media: {\n         height: 140\n      },\n      chip: {\n         margin: theme.spacing(0.5),\n         marginTop: theme.spacing(1)\n      },\n      detailsButton: {\n         marginLeft: 'auto'\n      },\n      categoryChip: {\n         position: 'absolute',\n         top: theme.spacing(1),\n         right: theme.spacing(1)\n      }\n   }));\n\n   const classes = useStyles();\n\n   const animalsRender = animals.map(animal => {\n      const tags = animal.tags.map(tag => {\n         return (\n            <Chip\n               key={tag.id}\n               className={classes.chip}\n               onClick={e => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  history.push(`/tags/${tag.id}`);\n               }}\n               label={tag.name}\n               color=\"primary\"\n               size=\"small\"\n               variant=\"outlined\"\n               clickable={true}\n            />\n         );\n      });\n\n      return (\n         <Card className={classes.card} key={animal.id}>\n            <CardActionArea component=\"a\" href={`/app/animals/${animal.id}`}>\n               <CardMedia\n                  className={classes.media}\n                  image={animal.picture}\n                  title={animal.name}\n               />\n               <Chip\n                  label={animal.category.name}\n                  color=\"default\"\n                  size=\"small\"\n                  className={classes.categoryChip}\n                  onClick={e => {\n                     e.preventDefault();\n                     e.stopPropagation();\n                     history.push(`/category/${animal.category.id}`);\n                  }}\n                  clickable={true}\n               />\n               <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                     {animal.name}\n                  </Typography>\n                  <Typography\n                     variant=\"body2\"\n                     color=\"textSecondary\"\n                     component=\"p\"\n                  >\n                     {animal.short_description || ''}\n                  </Typography>\n                  {tags}\n               </CardContent>\n            </CardActionArea>\n            <CardActions>\n               <IconButton aria-label=\"share\">\n                  <BookmarkBorder />\n               </IconButton>\n               <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  className={classes.detailsButton}\n                  component=\"a\"\n                  href={`/app/animals/${animal.id}`}\n               >\n                  Dettagli\n               </Button>\n            </CardActions>\n         </Card>\n      );\n   });\n\n   if (!animals.length) return false;\n\n   return (\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n         {animalsRender}\n      </Grid>\n   );\n}\n\nexport default AnimalList;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n   Chip,\n   Button,\n   TextField,\n   MenuItem,\n   Typography\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport axios from 'axios';\nimport AnimalList from '../AnimalList/AnimalList';\nimport AppContext from '../AppContext';\nimport ReactGA from 'react-ga';\n\nexport default function SearchPage() {\n   const appContext = useContext(AppContext);\n   const [tags, setTags] = useState([]);\n   const [categories, setCategories] = useState([]);\n   const [filteredAnimals, setFilteredAnimals] = useState([]);\n   const [searchFilter, setSearchFilter] = useState({});\n   const [animalName, setAnimalName] = useState('');\n   const [category, setCategory] = useState('');\n   const [showForm, setShowForm] = useState(true);\n\n   useEffect(() => {\n      ReactGA.pageview('/search');\n   }, []);\n\n   useEffect(() => {\n      if (Object.keys(searchFilter).length) {\n         axios.get('/api/animals/', { params: searchFilter }).then(response => {\n            if (response.status === 200) {\n               setFilteredAnimals(response.data.results);\n            }\n         });\n      }\n   }, [searchFilter]);\n\n   useEffect(() => {\n      const tags = appContext.tags.map(tag => ({\n         id: tag.id,\n         name: tag.name,\n         selected: false\n      }));\n      setTags(tags);\n\n      const categories = appContext.categories.map(category => ({\n         id: category.id,\n         name: category.name\n      }));\n      setCategories(categories);\n   }, [appContext.tags, appContext.categories]);\n\n   const toggleTagSelection = index => {\n      const newTagList = [...tags];\n      newTagList[index] = {\n         ...newTagList[index],\n         selected: !newTagList[index].selected\n      };\n      setTags(newTagList);\n   };\n\n   const submitSearch = e => {\n      e.preventDefault();\n      let selectedFilters = {};\n      const selectedTags = tags.filter(tag => tag.selected);\n      if (selectedTags.length) {\n         selectedFilters.tags = selectedTags\n            .reduce((acc, tag) => {\n               acc.push(tag.id);\n               return acc;\n            }, [])\n            .join(',');\n      }\n      if (animalName !== '') {\n         selectedFilters.name = animalName;\n      }\n      if (category !== '') {\n         selectedFilters.category = category;\n      }\n      setSearchFilter(selectedFilters);\n      setShowForm(false);\n   };\n\n   const useStyles = makeStyles(theme => ({\n      tags: {\n         marginBottom: theme.spacing(2)\n      },\n      tagList: {\n         maxHeight: theme.spacing(24),\n         overflowY: 'auto',\n         overflowX: 'hidden'\n      },\n      chip: {\n         margin: theme.spacing(1)\n      },\n      container: {\n         maxHeight: showForm ? '1200px' : 0,\n         overflowY: 'hidden',\n         transition: 'max-height .5s cubic-bezier(0, 1, 0.5, 1)'\n      },\n      centered: {\n         textAlign: 'center'\n      }\n   }));\n\n   const classes = useStyles();\n\n   const tagChips = tags.map((tag, index) => {\n      const color = tag.selected ? 'primary' : 'default';\n      return (\n         <Chip\n            key={tag.id}\n            label={tag.name}\n            color={color}\n            onClick={toggleTagSelection.bind(this, index)}\n            className={classes.chip}\n         />\n      );\n   });\n\n   return (\n      <>\n         <Typography\n            variant=\"h4\"\n            gutterBottom\n            color=\"textPrimary\"\n            className={classes.centered}\n         >\n            Ricerca un animale\n         </Typography>\n         <form\n            className={classes.container}\n            noValidate\n            autoComplete=\"off\"\n            onSubmit={submitSearch}\n         >\n            <TextField\n               id=\"name-filter\"\n               label=\"Nome\"\n               fullWidth={true}\n               margin=\"normal\"\n               value={animalName}\n               placeholder=\"Digita una chiave di ricerca\"\n               onChange={e => {\n                  setAnimalName(e.target.value);\n               }}\n            />\n            <TextField\n               id=\"category-filter\"\n               select\n               fullWidth={true}\n               label=\"Categoria\"\n               margin=\"normal\"\n               value={category}\n               onChange={e => {\n                  setCategory(e.target.value);\n               }}\n            >\n               {categories.map(option => {\n                  const selected = category === option.id;\n                  return (\n                     <MenuItem\n                        key={option.id}\n                        value={option.id}\n                        selected={selected}\n                     >\n                        {option.name}\n                     </MenuItem>\n                  );\n               })}\n            </TextField>\n            <div className={classes.tags}>\n               <Typography variant=\"h5\" gutterBottom color=\"textPrimary\">\n                  {' '}\n                  Tags\n               </Typography>\n               <div className={classes.tagList}>{tagChips}</div>\n            </div>\n            <Button\n               type=\"submit\"\n               color=\"primary\"\n               variant=\"contained\"\n               fullWidth={true}\n            >\n               Cerca\n            </Button>\n         </form>\n         {!showForm && (\n            <div className={classes.centered}>\n               <Button\n                  variant=\"outlined\"\n                  color=\"default\"\n                  startIcon={<SearchIcon />}\n                  onClick={() => {\n                     setShowForm(true);\n                  }}\n               >\n                  Modifica ricerca\n               </Button>\n            </div>\n         )}\n         <AnimalList animals={filteredAnimals} />\n      </>\n   );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport AnimalList from '../AnimalList/AnimalList';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactGA from 'react-ga';\n\nexport default function CategoryPage() {\n   const [animals, setAnimals] = useState([]);\n   useEffect(() => {\n      ReactGA.pageview('/animals');\n      axios.get(`/api/animals/`).then(response => {\n         if (response.status === 200) {\n            setAnimals(response.data.results);\n         }\n      });\n   }, []);\n\n   const useStyles = makeStyles(theme => ({\n      centered: {\n         textAlign: 'center'\n      }\n   }));\n\n   const classes = useStyles();\n\n   return (\n      <>\n         <Typography\n            variant=\"h4\"\n            gutterBottom\n            color=\"textPrimary\"\n            className={classes.centered}\n         >\n            Tutti gli animali\n         </Typography>\n         <AnimalList animals={animals} />\n      </>\n   );\n}\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport default function AppFab() {\n\n    const history = useHistory();\n\n  const handleFabClick = () => {\n    history.push('/');\n  };\n\n  const useStyles = makeStyles(theme => ({\n    fab: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n      zIndex: 10\n    }\n  }));\n\n  const classes = useStyles();\n\n    return (\n        <Fab color=\"secondary\" onClick={handleFabClick} className={classes.fab} aria-label=\"Cerca\">\n          <SearchIcon />\n        </Fab>\n    );\n\n}","import React, { useState, useEffect, useContext } from 'react';\nimport AnimalList from '../AnimalList/AnimalList';\nimport { Typography } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport AppContext from '../AppContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactGA from 'react-ga';\n\nexport default function CategoryPage() {\n   const { id } = useParams();\n   const [animals, setAnimals] = useState([]);\n   const appContext = useContext(AppContext);\n   const category = appContext.categories.find(\n      category => category.id === parseInt(id)\n   );\n   useEffect(() => {\n      ReactGA.pageview(`/animals/?category=${id}`);\n      axios.get(`/api/animals/?category=${id}`).then(response => {\n         if (response.status === 200) {\n            setAnimals(response.data.results);\n         }\n      });\n   }, [id]);\n\n   const useStyles = makeStyles(theme => ({\n      centered: {\n         textAlign: 'center'\n      }\n   }));\n\n   const classes = useStyles();\n\n   return (\n      <>\n         <Typography\n            variant=\"h4\"\n            gutterBottom\n            color=\"textPrimary\"\n            className={classes.centered}\n         >\n            {category && category.name}\n         </Typography>\n         <AnimalList animals={animals} />\n      </>\n   );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport AnimalList from '../AnimalList/AnimalList';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport AppContext from '../AppContext';\nimport ReactGA from 'react-ga';\n\nexport default function CategoryPage() {\n   const { id } = useParams();\n   const [animals, setAnimals] = useState([]);\n   const appContext = useContext(AppContext);\n   const tag = appContext.tags.find(tag => tag.id === parseInt(id));\n   useEffect(() => {\n      ReactGA.pageview(`/animals/?tags=${id}`);\n      axios.get(`/api/animals/?tags=${id}`).then(response => {\n         if (response.status === 200) {\n            setAnimals(response.data.results);\n         }\n      });\n   }, [id]);\n\n   return (\n      <>\n         <h1>{tag && tag.name}</h1>\n         <AnimalList animals={animals} />\n      </>\n   );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactGA from 'react-ga';\n\nfunction AnimalDetails() {\n   const { id } = useParams();\n   const [animal, setAnimal] = useState(false);\n   useEffect(() => {\n      ReactGA.pageview(`/animals/${id}`);\n      axios.get(`/api/animals/${id}`).then(response => {\n         if (response.status === 200) {\n            setAnimal(response.data);\n         }\n      });\n   }, [id]);\n\n   const useStyles = makeStyles(theme => ({\n      card: {\n         maxWidth: 500,\n         marginBottom: 20,\n         marginTop: 20,\n         marginLeft: 'auto',\n         marginRight: 'auto'\n      },\n      shortDescription: {\n         marginBottom: 20\n      }\n   }));\n\n   const classes = useStyles();\n\n   if (!animal) return <LinearProgress />;\n\n   return (\n      <Card className={classes.card}>\n         <CardMedia\n            component=\"img\"\n            alt={animal.name}\n            height=\"240\"\n            image={animal.picture}\n            title={animal.name}\n         />\n         <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n               {animal.name}\n            </Typography>\n\n            <Typography className={classes.shortDescription}>\n               {animal.short_description}\n            </Typography>\n\n            <ExpansionPanel>\n               <ExpansionPanelSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n               >\n                  <Typography>Descrizione fisica</Typography>\n               </ExpansionPanelSummary>\n               <ExpansionPanelDetails>\n                  <Typography>{animal.physical_description}</Typography>\n               </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n               <ExpansionPanelSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n               >\n                  <Typography>Comportamento</Typography>\n               </ExpansionPanelSummary>\n               <ExpansionPanelDetails>\n                  <Typography>{animal.behavior_description}</Typography>\n               </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n               <ExpansionPanelSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n               >\n                  <Typography>Habitat</Typography>\n               </ExpansionPanelSummary>\n               <ExpansionPanelDetails>\n                  <Typography>{animal.habitat_description}</Typography>\n               </ExpansionPanelDetails>\n            </ExpansionPanel>\n         </CardContent>\n      </Card>\n   );\n}\n\nexport default AnimalDetails;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Container from '@material-ui/core/Container';\nimport NavBar from './NavBar/NavBar';\nimport AppDrawer from './AppDrawer/AppDrawer';\nimport SearchPage from './SearchPage/SearchPage';\nimport AllAnimalsPage from './AllAnimalsPage/AllAnimalsPage';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport DrawerContext from './AppDrawer/DrawerContext';\nimport AppFab from './AppFab/AppFab';\nimport AppContext from './AppContext';\nimport CategoryPage from './CategoryPage/CategoryPage';\nimport TagPage from './TagPage/TagPage';\nimport AnimalDetails from './AnimalDetails/AnimalDetails';\nimport { Box } from '@material-ui/core';\nimport ReactGA from 'react-ga';\n\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\naxios.defaults.xsrfCookieName = 'csrftoken';\n\nif (process.env.hasOwnProperty('REACT_APP_GA_TRACKING_CODE')) {\n   ReactGA.initialize(process.env.REACT_APP_GA_TRACKING_CODE);\n}\n\nconst theme = createMuiTheme({\n   palette: {\n      type: 'dark',\n      primary: { main: '#EFAC78' },\n      secondary: { main: '#FAE09B' },\n      background: {\n         paper: '#2A1F2C',\n         default: '#1D151F'\n      },\n      text: {\n         primary: '#FBF8DC',\n         secondary: '#F6D2A3'\n      }\n   }\n});\n\nfunction App() {\n   const [showDrawer, setShowDrawer] = useState(false);\n   const [categories, setCategories] = useState([]);\n   const [tags, setTags] = useState([]);\n\n   useEffect(() => {\n      axios.get('/api/categories/').then(response => {\n         if (response.status === 200) {\n            setCategories(response.data.results);\n         }\n      });\n      axios.get('/api/tags/').then(response => {\n         if (response.status === 200) {\n            setTags(response.data.results);\n         }\n      });\n   }, []);\n\n   return (\n      <ThemeProvider theme={theme}>\n         <AppContext.Provider\n            value={{\n               categories,\n               tags\n            }}\n         >\n            <Box\n               bgcolor=\"background.default\"\n               style={{ minHeight: '100vh' }}\n               py={8}\n            >\n               <Router basename=\"/app\">\n                  <DrawerContext.Provider\n                     value={{\n                        showDrawer,\n                        setShowDrawer\n                     }}\n                  >\n                     <NavBar />\n                     <AppDrawer />\n                     <AppFab />\n                  </DrawerContext.Provider>\n\n                  <Container maxWidth=\"md\">\n                     <Switch>\n                        <Route path=\"/animals\" exact>\n                           <AllAnimalsPage />\n                        </Route>\n                        <Route path=\"/animals/:id\">\n                           <AnimalDetails />\n                        </Route>\n                        <Route path=\"/category/:id\">\n                           <CategoryPage />\n                        </Route>\n                        <Route path=\"/tags/:id\">\n                           <TagPage />\n                        </Route>\n                        <Route path=\"/\">\n                           <SearchPage />\n                        </Route>\n                     </Switch>\n                  </Container>\n               </Router>\n            </Box>\n         </AppContext.Provider>\n      </ThemeProvider>\n   );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createContext} from 'react';\n\nconst AppContext = createContext();\n\nexport default AppContext;","import { createContext } from 'react';\n\nconst DrawerContext = createContext();\n\nexport default DrawerContext;","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\nimport DrawerContext from './DrawerContext';\nimport AppContext from '../AppContext';\n\nfunction AppDrawer() {\n   const drawerContext = useContext(DrawerContext);\n   const appContext = useContext(AppContext);\n   const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n   const useStyles = makeStyles({\n      list: {\n         width: 250\n      },\n      fullList: {\n         width: 'auto'\n      }\n   });\n   const classes = useStyles();\n\n   const toggleDrawer = open => event => {\n      if (\n         event &&\n         event.type === 'keydown' &&\n         (event.key === 'Tab' || event.key === 'Shift')\n      ) {\n         return;\n      }\n      drawerContext.setShowDrawer(open);\n   };\n\n   function ListItemLink(props) {\n      return <ListItem button component=\"a\" {...props} />;\n   }\n\n   const Items = (\n      <div\n         className={classes.list}\n         role=\"presentation\"\n         onClick={toggleDrawer(false)}\n         onKeyDown={toggleDrawer(false)}\n      >\n         <List>\n            <ListItemLink href=\"/\">\n               <ListItemIcon>\n                  <SearchIcon />\n               </ListItemIcon>\n               <ListItemText primary=\"Cerca\" />\n            </ListItemLink>\n            <ListItemLink href=\"/app/animals\">\n               <ListItemIcon>\n                  <PetsIcon />\n               </ListItemIcon>\n               <ListItemText primary=\"Mostra tutti\" />\n            </ListItemLink>\n         </List>\n         <Divider />\n         <List\n            subheader={\n               <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                  Per Categorie\n               </ListSubheader>\n            }\n         >\n            {appContext.categories.map(category => (\n               <ListItemLink\n                  href={`/app/category/${category.id}`}\n                  key={category.id}\n               >\n                  <ListItemIcon>\n                     <ChevronRightIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={category.name} />\n               </ListItemLink>\n            ))}\n         </List>\n         <Divider />\n         <List>\n            <ListItem button>\n               <ListItemIcon>\n                  <LoyaltyIcon />\n               </ListItemIcon>\n               <ListItemText primary=\"Credits\" />\n            </ListItem>\n         </List>\n      </div>\n   );\n\n   return (\n      <div>\n         <SwipeableDrawer\n            open={drawerContext.showDrawer}\n            onClose={toggleDrawer(false)}\n            onOpen={toggleDrawer(true)}\n            disableBackdropTransition={!iOS}\n            disableDiscovery={iOS}\n         >\n            {Items}\n         </SwipeableDrawer>\n      </div>\n   );\n}\n\nexport default AppDrawer;\n"],"sourceRoot":""}
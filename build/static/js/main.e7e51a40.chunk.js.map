{"version":3,"sources":["NavBar/NavBar.jsx","AnimalList/AnimalList.jsx","SearchPage/SearchPage.jsx","AllAnimalsPage/AllAnimalsPage.jsx","AppFab/AppFab.jsx","CategoryPage/CategoryPage.jsx","TagPage/TagPage.jsx","AnimalDetails/AnimalDetails.jsx","App.js","serviceWorker.js","index.js","AppContext.jsx","AppDrawer/DrawerContext.jsx","AppDrawer/AppDrawer.jsx"],"names":["NavBar","drawerContext","useContext","DrawerContext","AppBar","position","color","Toolbar","IconButton","onClick","setShowDrawer","showDrawer","edge","aria-label","Typography","variant","AnimalList","animals","history","useHistory","classes","makeStyles","theme","card","maxWidth","marginBottom","marginTop","media","height","chip","margin","spacing","detailsButton","marginLeft","categoryChip","top","right","useStyles","animalsRender","map","animal","tags","tag","Chip","key","id","className","e","preventDefault","stopPropagation","push","label","name","size","clickable","Card","CardActionArea","component","href","CardMedia","image","picture","title","category","CardContent","gutterBottom","short_description","CardActions","Button","length","Grid","container","direction","justify","alignItems","SearchPage","appContext","AppContext","useState","setTags","categories","setCategories","filteredAnimals","setFilteredAnimals","searchFilter","setSearchFilter","animalName","setAnimalName","setCategory","showForm","setShowForm","useEffect","Object","keys","axios","get","params","then","response","status","data","results","selected","toggleTagSelection","index","newTagList","tagList","maxHeight","overflowY","overflowX","transition","tagChips","bind","noValidate","autoComplete","onSubmit","selectedFilters","selectedTags","filter","reduce","acc","join","TextField","fullWidth","value","placeholder","onChange","target","select","option","MenuItem","type","CategoryPage","setAnimals","AppFab","fab","bottom","zIndex","Fab","useParams","find","parseInt","AnimalDetails","setAnimal","marginRight","alt","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","physical_description","behavior_description","habitat_description","LinearProgress","defaults","xsrfHeaderName","xsrfCookieName","createMuiTheme","palette","primary","main","secondary","background","paper","default","text","App","ThemeProvider","Provider","Box","bgcolor","style","minHeight","py","AppDrawer","Container","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","createContext","iOS","process","browser","test","userAgent","list","width","fullList","toggleDrawer","open","event","ListItemLink","props","button","Items","role","onKeyDown","subheader","onClose","onOpen","disableBackdropTransition","disableDiscovery"],"mappings":"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","file":"static/js/main.e7e51a40.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport DrawerContext from '../AppDrawer/DrawerContext';\n\nfunction NavBar() {\n    const drawerContext = useContext(DrawerContext);\n    const onDrawerButton = () => {\n        drawerContext.setShowDrawer(!drawerContext.showDrawer);\n    };\n    return (\n        <AppBar position=\"fixed\" color=\"inherit\">\n            <Toolbar>\n                <IconButton onClick={onDrawerButton} edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\">\n                    Totem\n            </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport { useHistory } from 'react-router-dom'; \nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport IconButton from '@material-ui/core/IconButton';\nimport BookmarkBorder from '@material-ui/icons/BookmarkBorder';\n\nfunction AnimalList({animals}) {\n    const history = useHistory();\n\n    const useStyles = makeStyles(theme => ({\n        card: {\n            maxWidth: 345,\n            marginBottom: 20,\n            marginTop: 20\n        },\n        media: {\n            height: 140,\n        },\n        chip: {\n            margin: theme.spacing(0.5),\n            marginTop: theme.spacing(1),\n        },\n        detailsButton: {\n            marginLeft: 'auto'\n        },\n        categoryChip: {\n            position: 'absolute',\n            top: theme.spacing(1),\n            right: theme.spacing(1)\n        } \n    }));\n\n    const classes = useStyles();\n\n    const animalsRender = animals.map(animal => {\n        \n        const tags = animal.tags.map((tag) => {\n            return (\n               \n                    <Chip\n                        key={tag.id} \n                    className={classes.chip} \n                    onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        history.push(`/tags/${tag.id}`);\n                    }\n                    }\n                        label={tag.name} \n                        color=\"primary\" \n                        size=\"small\"\n                        variant=\"outlined\"\n                        clickable={true}\n                    />\n            );\n        });\n\n        return (\n            <Card className={classes.card} key={animal.id}>\n                <CardActionArea component='a' href={`/animals/${animal.id}`}>\n                    <CardMedia\n                        className={classes.media}\n                        image={animal.picture}\n                        title={animal.name}\n                    />\n                    <Chip\n                        label={animal.category.name}\n                        color=\"default\"\n                        size=\"small\"\n                        className={classes.categoryChip}\n                        onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            history.push(`/category/${animal.category.id}`);\n                        }}\n                        clickable={true}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {animal.name}\n                    </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {animal.short_description || ''}\n                     </Typography>\n                    { tags }\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <IconButton aria-label=\"share\">\n                        <BookmarkBorder />\n                    </IconButton>\n                    <Button \n                    size=\"small\" \n                    color=\"primary\" \n                    className={classes.detailsButton}\n                    component='a' \n                    href={`/animals/${animal.id}`}\n                    >\n                        Dettagli\n                </Button>\n                </CardActions>\n            </Card>\n        );\n    });\n\n    if(!animals.length) return false;\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n        >\n        {animalsRender}\n        </Grid>\n    );\n\n}\n\nexport default AnimalList;","import React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Chip, Button, TextField, MenuItem, Typography, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport axios from 'axios';\nimport AnimalList from '../AnimalList/AnimalList';\nimport AppContext from '../AppContext';\n\nexport default function SearchPage() {\n\n    const appContext = useContext(AppContext);\n    const [tags, setTags] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [filteredAnimals, setFilteredAnimals] = useState([]);\n    const [searchFilter, setSearchFilter] = useState({});\n    const [animalName, setAnimalName] = useState('');\n    const [category, setCategory] = useState('');\n    const [showForm, setShowForm] = useState(true);\n\n    useEffect(() => {\n        if (Object.keys(searchFilter).length) {\n            axios.get('/api/animals/', { params: searchFilter}).then(response => {\n                if (response.status === 200) {\n                    setFilteredAnimals(response.data.results);\n                }\n            }); \n        }\n    }, [searchFilter]);\n\n    useEffect(() => {\n\n        const tags = appContext.tags.map(tag => ({\n                    id: tag.id,\n                    name: tag.name,\n                    selected: false\n                }));\n        setTags(tags);\n\n        const categories = appContext.categories.map(category => ({\n                        id: category.id,\n                        name: category.name\n                    }));\n        setCategories(categories);\n\n    }, [appContext.tags, appContext.categories]);\n\n    const toggleTagSelection = (index) => {\n        const newTagList = [...tags];\n        newTagList[index] = { ...newTagList[index], selected: !newTagList[index].selected};\n        setTags(newTagList);\n    };\n\n    const submitSearch = (e) => {\n        e.preventDefault();\n        let selectedFilters = {};\n        const selectedTags = tags.filter(tag => tag.selected);\n        if(selectedTags.length) {\n            selectedFilters.tags = selectedTags.reduce((acc, tag) => {\n                acc.push(tag.id);                \n                return acc;\n            }, []).join(',');\n        }\n        if(animalName !== '') {\n            selectedFilters.name = animalName; \n        }\n        if (category !== '') {\n            selectedFilters.category = category;\n        }\n        setSearchFilter(selectedFilters);\n        setShowForm(false);\n    };\n\n    const useStyles = makeStyles(theme => ({\n        tags: {\n            marginBottom: theme.spacing(2)\n        },\n        tagList: {\n            maxHeight: theme.spacing(24),\n            overflowY: 'auto',\n            overflowX: 'hidden'\n        },\n        chip: {\n            margin: theme.spacing(1)\n        },\n        container: {\n            maxHeight: showForm ? '1200px' : 0,\n            overflowY: 'hidden',\n            transition: 'max-height .5s cubic-bezier(0, 1, 0.5, 1)'\n        }\n    }));\n\n    const classes = useStyles();\n\n    const tagChips = tags.map((tag, index) => {\n        const color = tag.selected ? 'primary' : 'default';\n        return <Chip\n            key={tag.id} \n            label={tag.name} \n            color={color} \n            onClick={toggleTagSelection.bind(this, index)} \n            className={classes.chip}\n            />\n    });\n\n    return (\n        <>\n            <Typography variant=\"h4\" gutterBottom color='textPrimary'>\n            Ricerca un animale\n            </Typography>\n            <form className={classes.container} noValidate autoComplete=\"off\" onSubmit={submitSearch}>\n                <TextField\n                    id=\"name-filter\"\n                    label=\"Nome\"\n                    fullWidth={true}\n                    margin=\"normal\"\n                    value={animalName}\n                    placeholder=\"Digita una chiave di ricerca\"\n                    onChange={(e) => {\n                        setAnimalName(e.target.value);\n                    }}\n                />\n                <TextField\n                    id=\"category-filter\"\n                    select\n                    fullWidth={true}\n                    label=\"Categoria\"\n                    margin=\"normal\"\n                    value={category}\n                    onChange={(e) => {\n                        setCategory(e.target.value);\n                    }}\n                >\n                    {categories.map(option => {\n                        const selected = category === option.id;\n                        return (\n                            <MenuItem key={option.id} value={option.id} selected={selected}>\n                            {option.name}\n                        </MenuItem>\n                    )})}\n                </TextField>\n                <div className={classes.tags}>\n                    <Typography variant=\"h5\" gutterBottom color='textPrimary'> Tags</Typography>\n                    <div className={classes.tagList}>\n                    { tagChips }\n                </div>\n                </div>\n                <Button type='submit' color='primary' variant='contained' fullWidth={true}>Cerca</Button>\n            </form>\n            {!showForm && \n            <IconButton aria-label=\"search\" onClick={() => {setShowForm(true)}}>\n                <SearchIcon />\n            </IconButton>\n            }\n            <AnimalList animals={filteredAnimals} />\n        </>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport AnimalList from '../AnimalList/AnimalList';\nimport axios from 'axios';\n\nexport default function CategoryPage() {\n    const [animals, setAnimals] = useState([]);\n    useEffect(() => {\n      axios.get(`/api/animals/`).then(response => {\n                if (response.status === 200) {\n                    setAnimals(response.data.results);\n                }\n            }); \n  }, []);\n\n    return (<><h1>Tutti gli animali</h1><AnimalList animals={animals} /></>);\n}","import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport default function AppFab() {\n\n    const history = useHistory();\n\n  const handleFabClick = () => {\n    history.push('/');\n  };\n\n  const useStyles = makeStyles(theme => ({\n    fab: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n      zIndex: 10\n    }\n  }));\n\n  const classes = useStyles();\n\n    return (\n        <Fab color=\"secondary\" onClick={handleFabClick} className={classes.fab} aria-label=\"Cerca\">\n          <SearchIcon />\n        </Fab>\n    );\n\n}","import React, {useState, useEffect, useContext} from 'react';\nimport AnimalList from '../AnimalList/AnimalList';\nimport {useParams} from 'react-router-dom';\nimport axios from 'axios';\nimport AppContext from '../AppContext';\n\nexport default function CategoryPage() {\n    const {id} = useParams();\n    const [animals, setAnimals] = useState([]);\n    const appContext = useContext(AppContext);\n    const category = appContext.categories.find(category => category.id === parseInt(id));\n    useEffect(() => {\n      axios.get(`/api/animals/?category=${id}`).then(response => {\n                if (response.status === 200) {\n                    setAnimals(response.data.results);\n                }\n            }); \n  }, [id]);\n\n    return (<><h1>{category && category.name}</h1><AnimalList animals={animals} /></>);\n}","import React, {useState, useEffect, useContext} from 'react';\nimport AnimalList from '../AnimalList/AnimalList';\nimport {useParams} from 'react-router-dom';\nimport axios from 'axios';\nimport AppContext from '../AppContext';\n\nexport default function CategoryPage() {\n    const {id} = useParams();\n    const [animals, setAnimals] = useState([]);\n    const appContext = useContext(AppContext);\n    const tag = appContext.tags.find(tag => tag.id === parseInt(id));\n    useEffect(() => {\n      axios.get(`/api/animals/?tags=${id}`).then(response => {\n                if (response.status === 200) {\n                    setAnimals(response.data.results);\n                }\n            }); \n  }, [id]);\n\n    return (<>\n    <h1>{tag && tag.name}</h1>\n    <AnimalList animals={animals} />\n    </>);\n}","import React, { useEffect, useState } from 'react';\nimport {useParams} from 'react-router-dom';\nimport axios from 'axios';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction AnimalDetails() {\n\n    const {id} = useParams();\n    const [animal, setAnimal] = useState(false);\n    useEffect(() => {\n      axios.get(`/api/animals/${id}`).then(response => {\n                if (response.status === 200) {\n                    setAnimal(response.data);\n                }\n            }); \n    }, [id]);\n\n    const useStyles = makeStyles(theme => ({\n        card: {\n            maxWidth: 345,\n            marginBottom: 20,\n            marginTop: 20,\n            marginLeft: 'auto',\n            marginRight: 'auto'\n        }\n    }));\n\n    const classes = useStyles();\n\n    if(!animal) return <LinearProgress />;\n\n    return (\n        <Card className={classes.card}>\n        <CardMedia\n          component=\"img\"\n          alt={animal.name}\n          height=\"140\"\n          image={animal.picture}\n          title={animal.name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {animal.name}\n          </Typography>\n          \n          \n          <Typography>\n            {animal.short_description}\n          </Typography>\n\n        <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>Descrizione fisica</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            {animal.physical_description}\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>Comportamento</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            {animal.behavior_description}\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>Habitat</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            {animal.habitat_description}\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n        </CardContent>\n    </Card>\n    );\n}\n\nexport default AnimalDetails;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Container from '@material-ui/core/Container';\nimport NavBar from './NavBar/NavBar';\nimport AppDrawer from './AppDrawer/AppDrawer';\nimport SearchPage from './SearchPage/SearchPage';\nimport AllAnimalsPage from './AllAnimalsPage/AllAnimalsPage';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { blueGrey, red } from '@material-ui/core/colors';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport DrawerContext from './AppDrawer/DrawerContext';\nimport AppFab from './AppFab/AppFab';\nimport AppContext from './AppContext';\nimport CategoryPage from './CategoryPage/CategoryPage';\nimport TagPage from './TagPage/TagPage';\nimport AnimalDetails from './AnimalDetails/AnimalDetails';\nimport { Box } from '@material-ui/core';\n\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#EFAC78' },\n    secondary: { main: '#FAE09B' },\n    background: {\n      paper: '#513E52',\n      default: '#433244'\n    },\n    text: {\n      primary: '#FBF8DC',\n      secondary: '#F6D2A3'\n    }\n  }\n});\n\nfunction App() {\n\n  const [showDrawer, setShowDrawer] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [tags, setTags] = useState([]);\n\n  useEffect(() => {\n      axios.get('/api/categories/').then(response => {\n                if (response.status === 200) {\n                    setCategories(response.data.results);\n                }\n            });\n      axios.get('/api/tags/').then(response => {\n            if (response.status === 200) {\n                setTags(response.data.results);\n            }\n        });\n  }, []);\n\n\n  return (\n    <ThemeProvider theme={theme}>\n    <AppContext.Provider value={{\n        categories,\n        tags\n      }}>\n      <Box bgcolor=\"background.default\" style={{minHeight: '100vh'}} py={8}>\n    <Router>\n      <DrawerContext.Provider value={{\n        showDrawer,\n        setShowDrawer\n      }}>\n        <NavBar />\n        <AppDrawer />\n        <AppFab />\n      </DrawerContext.Provider>\n      \n      <Container maxWidth=\"md\">\n        <Switch>\n            <Route path=\"/animals\" exact>\n              <AllAnimalsPage />\n            </Route>\n            <Route path=\"/animals/:id\">\n              <AnimalDetails />\n            </Route>\n            <Route path=\"/category/:id\">\n              <CategoryPage />\n            </Route>\n            <Route path=\"/tags/:id\">\n              <TagPage />\n            </Route>\n            <Route path=\"/\">\n              <SearchPage />\n            </Route>\n            </Switch>\n      </Container>\n      \n        </Router>\n        </Box>\n    </AppContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createContext} from 'react';\n\nconst AppContext = createContext();\n\nexport default AppContext;","import { createContext } from 'react';\n\nconst DrawerContext = createContext();\n\nexport default DrawerContext;","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\nimport DrawerContext from './DrawerContext';\nimport AppContext from '../AppContext';\n\nfunction AppDrawer({categories}) {\n    const drawerContext = useContext(DrawerContext);\n    const appContext = useContext(AppContext);\n    const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n    const useStyles = makeStyles({\n        list: {\n            width: 250,\n        },\n        fullList: {\n            width: 'auto',\n        },\n    });\n    const classes = useStyles();\n\n    const toggleDrawer = (open) => event => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        drawerContext.setShowDrawer(open);\n    };\n\n    function ListItemLink(props) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\n    const Items = (\n        <div\n            className={classes.list}\n            role=\"presentation\"\n            onClick={toggleDrawer(false)}\n            onKeyDown={toggleDrawer(false)}\n        >\n            <List>\n                <ListItemLink href=\"/\">\n                    <ListItemIcon><SearchIcon /></ListItemIcon>\n                    <ListItemText primary='Cerca' />\n                </ListItemLink>\n                <ListItemLink href=\"/animals\">\n                    <ListItemIcon><PetsIcon /></ListItemIcon>\n                    <ListItemText primary='Mostra tutti' />\n                </ListItemLink>\n            </List>\n            <Divider />\n            <List\n            subheader={\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                Per Categorie\n                </ListSubheader>\n            }>\n                {appContext.categories.map(category => (\n                        <ListItemLink href={`/category/${category.id}`} key={category.id}>\n                    <ListItemIcon><ChevronRightIcon /></ListItemIcon>\n                    <ListItemText primary={category.name} />\n                </ListItemLink>\n                    )\n                )}\n                \n            </List>\n            <Divider />\n            <List>\n                <ListItem button>\n                    <ListItemIcon><LoyaltyIcon /></ListItemIcon>\n                    <ListItemText primary='Credits' />\n                </ListItem>\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            <SwipeableDrawer\n                open={drawerContext.showDrawer}\n                onClose={toggleDrawer(false)}\n                onOpen={toggleDrawer(true)}\n                disableBackdropTransition={!iOS} disableDiscovery={iOS}\n            >\n                {Items}\n            </SwipeableDrawer>\n        </div>\n    );\n}\n\nexport default AppDrawer;"],"sourceRoot":""}